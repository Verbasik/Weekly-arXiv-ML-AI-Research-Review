// script.js

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è GitHub
const GITHUB_REPO = 'Verbasik/Weekly-arXiv-ML-AI-Research-Review';
const GITHUB_BRANCH = 'develop'; // –ò–ª–∏ 'main', –µ—Å–ª–∏ –≤–µ—Ç–∫–∞ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ç–∞–∫

// ==================== –£–õ–£–ß–®–ï–ù–ù–´–ô ERROR HANDLING ==================== 

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è retry –º–µ—Ö–∞–Ω–∏–∑–º–∞
const RETRY_CONFIG = {
    maxRetries: 3,
    baseDelay: 1000, // 1 —Å–µ–∫—É–Ω–¥–∞
    maxDelay: 10000, // 10 —Å–µ–∫—É–Ω–¥
    backoffFactor: 2
};

// –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è error handling
const ErrorHandler = {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É
    isOnline: () => navigator.onLine,
    
    // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –æ—à–∏–±–∫–∏
    classifyError: (error, response = null) => {
        if (!navigator.onLine) {
            return { type: 'offline', severity: 'high', retryable: true };
        }
        
        if (response) {
            if (response.status === 404) {
                return { type: 'not_found', severity: 'medium', retryable: false };
            }
            if (response.status >= 500) {
                return { type: 'server_error', severity: 'high', retryable: true };
            }
            if (response.status === 403) {
                return { type: 'forbidden', severity: 'medium', retryable: false };
            }
            if (response.status >= 400) {
                return { type: 'client_error', severity: 'medium', retryable: false };
            }
        }
        
        if (error.name === 'TypeError' && error.message.includes('fetch')) {
            return { type: 'network', severity: 'high', retryable: true };
        }
        
        return { type: 'unknown', severity: 'medium', retryable: true };
    },
    
    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    getUserMessage: (errorType, context = '') => {
        const messages = {
            offline: {
                title: 'üåê –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É',
                message: '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ç–∏ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.',
                action: '–ü–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É'
            },
            not_found: {
                title: 'üìÑ –ö–æ–Ω—Ç–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω',
                message: `${context} –Ω–µ –Ω–∞–π–¥–µ–Ω. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω –µ—â–µ –Ω–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –∏–ª–∏ –±—ã–ª –ø–µ—Ä–µ–º–µ—â–µ–Ω.`,
                action: '–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É'
            },
            server_error: {
                title: '‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞',
                message: '–í—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ä–≤–µ—Ä–æ–º. –ú—ã —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ –∏—Ö —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ–º.',
                action: '–ü–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É'
            },
            forbidden: {
                title: 'üîí –î–æ—Å—Ç—É–ø –æ–≥—Ä–∞–Ω–∏—á–µ–Ω',
                message: '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —ç—Ç–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞.',
                action: '–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É'
            },
            client_error: {
                title: '‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞',
                message: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö.',
                action: '–ü–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É'
            },
            network: {
                title: 'üåê –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é',
                message: '–ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.',
                action: '–ü–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É'
            },
            unknown: {
                title: '‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞',
                message: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.',
                action: '–ü–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É'
            }
        };
        
        return messages[errorType] || messages.unknown;
    },
    
    // –ó–∞–¥–µ—Ä–∂–∫–∞ —Å —ç–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–º backoff
    delay: (attempt) => {
        const delay = Math.min(
            RETRY_CONFIG.baseDelay * Math.pow(RETRY_CONFIG.backoffFactor, attempt),
            RETRY_CONFIG.maxDelay
        );
        return new Promise(resolve => setTimeout(resolve, delay));
    }
};

// –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è fetch —Å retry
async function fetchWithRetry(url, options = {}, context = '') {
    let lastError = null;
    let lastResponse = null;
    
    for (let attempt = 0; attempt <= RETRY_CONFIG.maxRetries; attempt++) {
        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ –∑–∞–ø—Ä–æ—Å–æ–º
            if (!ErrorHandler.isOnline()) {
                throw new Error('No internet connection');
            }
            
            // –°–æ–∑–¥–∞–µ–º AbortController –¥–ª—è timeout (—Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å —Å—Ç–∞—Ä—ã–º–∏ –±—Ä–∞—É–∑–µ—Ä–∞–º–∏)
            const controller = new AbortController();
            const timeoutId = setTimeout(() => controller.abort(), 15000); // 15 —Å–µ–∫—É–Ω–¥ timeout
            
            const response = await fetch(url, {
                ...options,
                signal: controller.signal
            });
            
            clearTimeout(timeoutId);
            
            lastResponse = response;
            
            if (!response.ok) {
                const errorInfo = ErrorHandler.classifyError(null, response);
                
                // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç retry, –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ä–∞–∑—É
                if (!errorInfo.retryable) {
                    throw new Error(`HTTP ${response.status}: ${response.statusText}`);
                }
                
                // –ï—Å–ª–∏ —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–ø—ã—Ç–∫–∞, –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
                if (attempt === RETRY_CONFIG.maxRetries) {
                    throw new Error(`HTTP ${response.status}: ${response.statusText}`);
                }
                
                // –ñ–¥–µ–º –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–æ–π
                console.warn(`Attempt ${attempt + 1} failed, retrying in ${RETRY_CONFIG.baseDelay * Math.pow(RETRY_CONFIG.backoffFactor, attempt)}ms...`);
                await ErrorHandler.delay(attempt);
                continue;
            }
            
            return response;
            
        } catch (error) {
            lastError = error;
            
            // –ï—Å–ª–∏ —ç—Ç–æ AbortError (timeout), –∫–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä—É–µ–º –∫–∞–∫ network error
            if (error.name === 'AbortError') {
                lastError = new Error('Request timeout');
            }
            
            const errorInfo = ErrorHandler.classifyError(lastError, lastResponse);
            
            // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç retry –∏–ª–∏ —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–ø—ã—Ç–∫–∞
            if (!errorInfo.retryable || attempt === RETRY_CONFIG.maxRetries) {
                throw lastError;
            }
            
            // –ñ–¥–µ–º –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–æ–π
            console.warn(`Attempt ${attempt + 1} failed: ${lastError.message}, retrying in ${RETRY_CONFIG.baseDelay * Math.pow(RETRY_CONFIG.backoffFactor, attempt)}ms...`);
            await ErrorHandler.delay(attempt);
        }
    }
    
    throw lastError;
}

// –°–æ–∑–¥–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ error UI
function createErrorUI(errorType, context = '', onRetry = null, onBack = null) {
    const userMessage = ErrorHandler.getUserMessage(errorType, context);
    
    const errorDiv = document.createElement('div');
    errorDiv.className = 'error-message enhanced';
    
    errorDiv.innerHTML = `
        <div class="error-header">
            <h4>${userMessage.title}</h4>
        </div>
        <div class="error-body">
            <p>${userMessage.message}</p>
            ${!ErrorHandler.isOnline() ? '<p class="offline-notice">üì° –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É...</p>' : ''}
        </div>
        <div class="error-actions">
            ${onRetry ? `<button class="gradient-button retry-button">${userMessage.action}</button>` : ''}
            ${onBack ? '<button class="gradient-button secondary back-button">‚Üê –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É</button>' : ''}
        </div>
    `;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    if (onRetry) {
        const retryButton = errorDiv.querySelector('.retry-button');
        retryButton?.addEventListener('click', onRetry);
    }
    
    if (onBack) {
        const backButton = errorDiv.querySelector('.back-button');
        backButton?.addEventListener('click', onBack);
    }
    
    return errorDiv;
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ DOM
const contentElement = document.querySelector('.content');
const modal = document.getElementById('markdown-modal');
const markdownContent = document.getElementById('markdown-content');
const closeModalButton = modal ? modal.querySelector('.close-modal') : null;
const loader = modal ? modal.querySelector('.loader') : null;
const backToTopButton = document.getElementById('back-to-top');
const searchInput = document.querySelector('.search-bar input');
const searchButton = document.querySelector('.search-bar button');

// --- –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö ---

async function loadWeeksData() {
    const jsonUrl = `https://raw.githubusercontent.com/${GITHUB_REPO}/${GITHUB_BRANCH}/web/index.json`;

    if (!contentElement) {
        console.error("Content element not found.");
        return;
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    const loadingIndicator = document.createElement('div');
    loadingIndicator.className = 'loading-indicator';
    loadingIndicator.innerHTML = `
        <div class="loader"></div>
        <p>–ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–µ–π...</p>
    `;
    contentElement.appendChild(loadingIndicator);

    try {
        const response = await fetchWithRetry(jsonUrl, {}, '–¥–∞–Ω–Ω—ã–µ —Å—Ç–∞—Ç–µ–π');
        const data = await response.json();

        // –£–¥–∞–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        loadingIndicator.remove();

        // –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Å–µ–∫—Ü–∏–π
        contentElement.querySelectorAll('.year-section:not(#home)').forEach(section => section.remove());

        // –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ–∫—Ü–∏–π –∏ –∫–∞—Ä—Ç–æ—á–µ–∫
        data.years.forEach(yearData => {
            const yearSection = createYearSection(yearData.year, contentElement);
            yearData.weeks.forEach(weekData => {
                createWeekCard(yearSection, yearData.year, weekData);
            });
        });

        updateYearFilters(data.years.map(y => y.year));
        checkUrlHash(); // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ö—ç—à –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∏ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞

    } catch (error) {
        console.error('Error loading weeks data:', error);
        
        // –£–¥–∞–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        loadingIndicator.remove();
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –æ—à–∏–±–∫–∏
        const errorInfo = ErrorHandler.classifyError(error);
        
        // –°–æ–∑–¥–∞–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π error UI
        const errorUI = createErrorUI(
            errorInfo.type, 
            '–¥–∞–Ω–Ω—ã–µ —Å—Ç–∞—Ç–µ–π',
            () => {
                // Retry callback
                errorUI.remove();
                loadWeeksData();
            },
            null // –ù–µ—Ç –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" –¥–ª—è –≥–ª–∞–≤–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
        );
        
        contentElement.appendChild(errorUI);
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        if (errorInfo.type === 'offline') {
            const handleOnline = () => {
                errorUI.remove();
                loadWeeksData();
                window.removeEventListener('online', handleOnline);
            };
            window.addEventListener('online', handleOnline);
        }
    }
}

function createYearSection(year, parentElement) {
    const yearSection = document.createElement('section');
    yearSection.id = year;
    yearSection.className = 'year-section';
    yearSection.innerHTML = `
        <h2 class="year-title section-heading">${year} Papers</h2>
        <div class="weeks-grid"></div>
    `;
    parentElement.appendChild(yearSection);
    return yearSection;
}

function createWeekCard(yearSection, year, weekData) {
    const weeksGrid = yearSection.querySelector('.weeks-grid');
    if (!weeksGrid) return;

    const card = document.createElement('div');
    card.className = 'week-card';
    card.setAttribute('data-week', weekData.week);
    card.setAttribute('data-year', year);

    const tagsHtml = weekData.tags?.map(tag => `<span class="mono"><i class="fas fa-tag"></i> ${tag}</span>`).join('') || '';
    const dateHtml = weekData.date ? `<span><i class="far fa-calendar"></i> ${weekData.date}</span>` : '';

    const footerItems = [];

    // Papers
    if (weekData.papers !== undefined) {
        const paperText = `${weekData.papers} Paper${weekData.papers !== 1 ? 's' : ''}`;
        footerItems.push(`<span><i class="far fa-file-alt"></i> ${paperText}</span>`);
    }

    // Notebooks
    if (weekData.notebooks !== undefined && weekData.notebook_path) {
        const notebooksText = `${weekData.notebooks} Notebook${weekData.notebooks !== 1 ? 's' : ''}`;
        const notebookUrl = `https://github.com/${GITHUB_REPO}/tree/${GITHUB_BRANCH}/${weekData.notebook_path}`;
        footerItems.push(`<a href="${notebookUrl}" target="_blank"><i class="far fa-file-code"></i> ${notebooksText}</a>`);
    } else if (weekData.notebooks !== undefined) {
        const notebooksText = `${weekData.notebooks} Notebook${weekData.notebooks !== 1 ? 's' : ''}`;
        footerItems.push(`<span><i class="far fa-file-code"></i> ${notebooksText}</span>`);
    }

    // Code files
    if (weekData.code !== undefined && weekData.code_path) {
        const codeText = `${weekData.code} Code${weekData.code !== 1 ? ' files' : ''}`;
        const codeUrl = `https://github.com/${GITHUB_REPO}/tree/${GITHUB_BRANCH}/${weekData.code_path}`;
        footerItems.push(`<a href="${codeUrl}" target="_blank"><i class="fas fa-code"></i> ${codeText}</a>`);
    } else if (weekData.code !== undefined) {
        const codeText = `${weekData.code} Code${weekData.code !== 1 ? ' files' : ''}`;
        footerItems.push(`<span><i class="fas fa-code"></i> ${codeText}</span>`);
    }

    card.innerHTML = `
        <div class="week-card-header">
            <h3 class="week-card-title">${weekData.title}</h3>
        </div>
        <div class="week-card-body">
            <div class="week-card-meta">${dateHtml} ${tagsHtml}</div>
            <p class="week-card-desc">${weekData.description || 'No description available.'}</p>
            <button class="gradient-button read-review">Read Review</button>
        </div>
        <div class="week-card-footer">
            ${footerItems.join('')}
        </div>
    `;

    weeksGrid.appendChild(card);

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "Read Review"
    card.querySelector('.read-review')?.addEventListener('click', (e) => {
        e.preventDefault();
        openReviewModal(year, weekData.week, weekData.title);
    });
}

function updateYearFilters(years) {
    const yearFilterList = document.querySelector('.sidebar ul:first-of-type');
    if (!yearFilterList) return;

    yearFilterList.innerHTML = '';
    years.sort((a, b) => b - a).forEach((year, index) => {
        const li = document.createElement('li');
        const a = document.createElement('a');
        a.href = `#${year}`;
        a.textContent = year;
        if (index === 0) a.className = 'active'; // –ü–µ—Ä–≤—ã–π –≥–æ–¥ –∞–∫—Ç–∏–≤–Ω—ã–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        li.appendChild(a);
        yearFilterList.appendChild(li);

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞
        a.addEventListener('click', function(e) {
            // –ù–µ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ —è–∫–æ—Ä—è (e.preventDefault()),
            // —á—Ç–æ–±—ã URL –æ–±–Ω–æ–≤–ª—è–ª—Å—è –∏ –º–æ–∂–Ω–æ –±—ã–ª–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å history.back/forward.
            // –ü—Ä–æ—Å—Ç–æ –æ–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å.
            yearFilterList.querySelectorAll('a').forEach(link => link.classList.remove('active'));
            this.classList.add('active');
            // –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ —Å–µ–∫—Ü–∏–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
            // const targetElement = document.getElementById(this.getAttribute('href').substring(1));
            // if (targetElement) targetElement.scrollIntoView({ behavior: 'smooth' });
        });
    });
}

// --- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∏ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ Markdown/MathJax ---

async function loadMarkdownFromGitHub(year, week) {
    const reviewUrl = `https://raw.githubusercontent.com/${GITHUB_REPO}/${GITHUB_BRANCH}/${year}/${week}/review.md`;

    if (!markdownContent || !loader) {
        console.error("Markdown content area or loader not found.");
        return false;
    }

    // –£–ª—É—á—à–µ–Ω–Ω—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    loader.style.display = 'block';
    markdownContent.innerHTML = `
        <div class="loading-content">
            <div class="loader"></div>
            <p>–ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç—å–∏ "${year}/${week}"...</p>
            <p class="loading-tip">üí° –û–±—ã—á–Ω–æ —ç—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥</p>
        </div>
    `;

    try {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–ª—É—á—à–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é fetch —Å retry
        const response = await fetchWithRetry(reviewUrl, {}, `—Å—Ç–∞—Ç—å—è "${year}/${week}"`);
        let markdown = await response.text();

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ markdown –Ω–µ –ø—É—Å—Ç–æ–π
        if (!markdown.trim()) {
            throw new Error('–°—Ç–∞—Ç—å—è –ø—É—Å—Ç–∞ –∏–ª–∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ–Ω—Ç–µ–Ω—Ç–∞');
        }

        // 1. –ò–∑–æ–ª—è—Ü–∏—è —Ñ–æ—Ä–º—É–ª MathJax
        const mathPlaceholders = {};
        let placeholderId = 0;
        const mathRegex = /(\$\$[\s\S]*?\$\$|\\\[[\s\S]*?\\\]|\$(?:[^$\\]|\\.)*?\$|\\\((?:[^)\\]|\\.)*?\\\))/g;
        markdown = markdown.replace(mathRegex, (match) => {
            const id = `mathjax-placeholder-${placeholderId++}`;
            mathPlaceholders[id] = match;
            return `<span id="${id}" style="display: none;"></span>`; // –ü–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä
        });

        // 2. –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ Markdown –≤ HTML
        if (typeof marked === 'undefined') {
            throw new Error("–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ Marked.js –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.");
        }
        
        let html;
        try {
            html = marked.parse(markdown);
        } catch (markdownError) {
            throw new Error(`–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ Markdown: ${markdownError.message}`);
        }

        // 3. –í—Å—Ç–∞–≤–∫–∞ HTML
        markdownContent.innerHTML = html;

        // 4. –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ä–º—É–ª
        Object.keys(mathPlaceholders).forEach(id => {
            const placeholderElement = markdownContent.querySelector(`#${id}`);
            if (placeholderElement) {
                placeholderElement.replaceWith(document.createTextNode(mathPlaceholders[id]));
            }
        });

        // 5. –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ MathJax
        try {
            if (typeof MathJax !== 'undefined' && MathJax.typesetPromise) {
                MathJax.texReset?.();
                MathJax.typesetClear?.([markdownContent]);
                await MathJax.typesetPromise([markdownContent]);
            } else {
                console.warn("MathJax 3 not found or not configured.");
            }
        } catch (mathJaxError) {
            console.warn("MathJax rendering failed:", mathJaxError);
            // –ù–µ –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É, —Ç–∞–∫ –∫–∞–∫ —Å—Ç–∞—Ç—å—è –º–æ–∂–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –±–µ–∑ —Ñ–æ—Ä–º—É–ª
        }

        loader.style.display = 'none';
        return true;

    } catch (error) {
        console.error('Error loading or processing markdown:', error);
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –æ—à–∏–±–∫–∏
        const errorInfo = ErrorHandler.classifyError(error);
        
        // –°–æ–∑–¥–∞–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π error UI –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        const errorUI = createErrorUI(
            errorInfo.type,
            `—Å—Ç–∞—Ç—å—è "${year}/${week}"`,
            () => {
                // Retry callback
                loadMarkdownFromGitHub(year, week);
            },
            () => {
                // Back callback - –∑–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
                closeModal();
            }
        );
        
        markdownContent.innerHTML = '';
        markdownContent.appendChild(errorUI);
        loader.style.display = 'none';
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        if (errorInfo.type === 'offline') {
            const handleOnline = () => {
                loadMarkdownFromGitHub(year, week);
                window.removeEventListener('online', handleOnline);
            };
            window.addEventListener('online', handleOnline);
        }
        
        return false;
    }
}

async function openReviewModal(year, week, title) {
    if (!modal || !markdownContent) return;

    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞
    const modalContentDiv = modal.querySelector('.modal-content');
    let titleElement = modalContentDiv?.querySelector('h2.modal-title');
    if (!titleElement) {
        titleElement = document.createElement('h2');
        titleElement.className = 'modal-title';
        titleElement.style.marginTop = '0';
        titleElement.style.marginBottom = '1rem';
        modalContentDiv?.insertBefore(titleElement, markdownContent);
    }
    titleElement.textContent = title;

    modal.style.display = 'flex';
    document.body.style.overflow = 'hidden';
    const success = await loadMarkdownFromGitHub(year, week);

    if (success) {
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ö—ç—à —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —É—Å–ø–µ—Ö–µ
        window.location.hash = `#${year}/${week}`;
    }
    // –ù–µ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ö—ç—à –ø—Ä–∏ –æ—à–∏–±–∫–µ, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–∏–¥–µ–ª, —á—Ç–æ –ø—ã—Ç–∞–ª—Å—è –æ—Ç–∫—Ä—ã—Ç—å
}

function checkUrlHash() {
    const hash = window.location.hash;
    if (hash && hash.startsWith('#') && hash.includes('/')) {
        const parts = hash.substring(1).split('/');
        if (parts.length === 2 && parts[0] && parts[1]) {
            const year = parts[0];
            const week = parts[1];

            // –ò—â–µ–º –∫–∞—Ä—Ç–æ—á–∫—É –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ (–º–æ–∂–µ—Ç –Ω–µ –Ω–∞–π—Ç–∏—Å—å, –µ—Å–ª–∏ DOM –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤)
            const card = document.querySelector(`.week-card[data-year="${year}"][data-week="${week}"]`);
            const title = card?.querySelector('.week-card-title')?.textContent || `Review ${year}/${week}`;

            // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ, –µ—Å–ª–∏ –æ–Ω–æ –µ—â–µ –Ω–µ –æ—Ç–∫—Ä—ã—Ç–æ –¥–ª—è —ç—Ç–æ–≥–æ —Ö—ç—à–∞
            const currentModalTitle = modal?.querySelector('.modal-content h2.modal-title');
            if (modal && (modal.style.display !== 'flex' || !currentModalTitle || currentModalTitle.textContent !== title)) {
                 openReviewModal(year, week, title);
            }
        } else {
             // –•—ç—à –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç—É, –∑–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ
             if (modal && modal.style.display === 'flex') {
                 closeModal();
             }
        }
    } else {
        // –•—ç—à –ø—É—Å—Ç –∏–ª–∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç '/', –∑–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ
        if (modal && modal.style.display === 'flex') {
            closeModal();
        }
    }
}

function closeModal() {
    if (modal) {
        modal.style.display = 'none';
        document.body.style.overflow = '';
        if (markdownContent) markdownContent.innerHTML = ''; // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ö—ç—à, —á—Ç–æ–±—ã –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ–∫–Ω–æ –Ω–µ –æ—Ç–∫—Ä—ã–ª–æ—Å—å —Å–Ω–æ–≤–∞
        history.pushState("", document.title, window.location.pathname + window.location.search);
    }
}

// --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π ---

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
closeModalButton?.addEventListener('click', closeModal);
window.addEventListener('click', (event) => {
    if (event.target === modal) {
        closeModal();
    }
});
window.addEventListener('keydown', (event) => {
    if (event.key === 'Escape' && modal && modal.style.display === 'flex') {
        closeModal();
    }
});


// –ö–Ω–æ–ø–∫–∞ "–ù–∞–≤–µ—Ä—Ö"
if (backToTopButton) {
    window.addEventListener('scroll', () => {
        backToTopButton.classList.toggle('visible', window.pageYOffset > 300);
    });
    backToTopButton.addEventListener('click', () => {
        window.scrollTo({ top: 0, behavior: 'smooth' });
    });
}

// –ü–æ–∏—Å–∫ (–∑–∞–≥–ª—É—à–∫–∞)
function performSearch(query) {
    if (!query) return;
    alert(`Search functionality is not implemented. You searched for: ${query}`);
    // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ª–æ–≥–∏–∫—É –ø–æ–∏—Å–∫–∞/—Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∫–∞—Ä—Ç–æ—á–µ–∫
}

searchButton?.addEventListener('click', () => {
    if (searchInput) performSearch(searchInput.value.trim());
});

searchInput?.addEventListener('keypress', (e) => {
    if (e.key === 'Enter' && searchInput) {
        performSearch(searchInput.value.trim());
    }
});

// ==================== NETWORK STATUS MONITORING ====================

// –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ç–∏
function createNetworkStatusIndicator() {
    const indicator = document.createElement('div');
    indicator.className = 'network-status online';
    indicator.innerHTML = 'üåê –û–Ω–ª–∞–π–Ω';
    document.body.appendChild(indicator);
    return indicator;
}

// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–º —Å–µ—Ç–∏
function initNetworkMonitoring() {
    const indicator = createNetworkStatusIndicator();
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π —Å–µ—Ç–∏
    window.addEventListener('online', () => {
        indicator.className = 'network-status online';
        indicator.innerHTML = 'üåê –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ';
        
        // –°–∫—Ä—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
            indicator.style.opacity = '0';
        }, 3000);
        
        console.log('Network connection restored');
    });
    
    window.addEventListener('offline', () => {
        indicator.className = 'network-status offline';
        indicator.innerHTML = 'üì° –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è';
        indicator.style.opacity = '1';
        
        console.log('Network connection lost');
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    if (!navigator.onLine) {
        indicator.className = 'network-status offline';
        indicator.innerHTML = 'üì° –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è';
        indicator.style.opacity = '1';
    }
}

// ==================== –£–õ–£–ß–®–ï–ù–ù–ê–Ø –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø ====================

// –§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å error handling
async function initializeApp() {
    try {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–µ—Ç–∏
        initNetworkMonitoring();
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        await loadWeeksData();
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º URL hash
        checkUrlHash();
        
        console.log('Application initialized successfully');
        
    } catch (error) {
        console.error('Failed to initialize application:', error);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫—É—é –æ—à–∏–±–∫—É
        if (contentElement) {
            const criticalError = createErrorUI(
                'unknown',
                '–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
                () => {
                    window.location.reload();
                },
                null
            );
            
            contentElement.innerHTML = '';
            contentElement.appendChild(criticalError);
        }
    }
}

// –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–∏—Å–∫–∞
function performSearch(query) {
    if (!query) return;
    
    // –í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–≥–ª—É—à–∫–∞ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º UX
    const searchModal = document.createElement('div');
    searchModal.className = 'modal';
    searchModal.style.display = 'flex';
    
    searchModal.innerHTML = `
        <div class="modal-content" style="max-width: 500px;">
            <span class="close-modal">√ó</span>
            <h2>üîç –ü–æ–∏—Å–∫</h2>
            <p>–§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.</p>
            <p><strong>–í–∞—à –∑–∞–ø—Ä–æ—Å:</strong> "${query}"</p>
            <div style="margin-top: 20px;">
                <p><strong>–ü–æ–∫–∞ —á—Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ:</strong></p>
                <ul style="text-align: left; margin-top: 10px;">
                    <li>–ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Å—Ç–∞—Ç—å–∏ –ø–æ –≥–æ–¥–∞–º –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏</li>
                    <li>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–µ–≥–∏ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏</li>
                    <li>–ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Å—Ç–∞—Ç—å–∏</li>
                </ul>
            </div>
            <button class="gradient-button" onclick="this.closest('.modal').remove()">–ü–æ–Ω—è—Ç–Ω–æ</button>
        </div>
    `;
    
    document.body.appendChild(searchModal);
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è
    searchModal.querySelector('.close-modal').addEventListener('click', () => {
        searchModal.remove();
    });
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    searchModal.addEventListener('click', (e) => {
        if (e.target === searchModal) {
            searchModal.remove();
        }
    });
}

// --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ---

// –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–ª—É—á—à–µ–Ω–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
window.addEventListener('DOMContentLoaded', initializeApp);
window.addEventListener('hashchange', checkUrlHash);

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è unhandled promise rejections
window.addEventListener('unhandledrejection', (event) => {
    console.error('Unhandled promise rejection:', event.reason);
    
    // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø–æ–∫–∞–∑ –æ—à–∏–±–∫–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞
    event.preventDefault();
    
    // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ –ø—Ä–æ–±–ª–µ–º–µ
    const notification = document.createElement('div');
    notification.className = 'error-notification';
    notification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background: rgba(244, 67, 54, 0.9);
        color: white;
        padding: 12px 16px;
        border-radius: 8px;
        font-size: 14px;
        z-index: 10000;
        max-width: 300px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.3);
    `;
    notification.innerHTML = '‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞';
    
    document.body.appendChild(notification);
    
    // –£–¥–∞–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
    setTimeout(() => {
        notification.remove();
    }, 5000);
});